// TODO this is very confusing refactor it later.

ext {
  GROUP_NAME_BACKUP = "Backup"

   EXPORT_RESULTS_FILE_NAME = "exportResults.sql";
   EXPORT_RESULTS_FILE_NAME_FULL = "Datasets/" + EXPORT_RESULTS_FILE_NAME
   EXPORT_RESULTS_BASH_FILE_NAME = "exportResults.bash"
   EXPORT_RESULTS_BASH_FILE_NAME_FULL = "Datasets/" + EXPORT_RESULTS_BASH_FILE_NAME;


  
CMD_ExportResultsSQLScript = """
.mode insert ML_TRAIN_RESULTS
.out "../runs/ML_TRAIN_RESULTS%s.sql"
select * from ML_TRAIN_RESULTS;
.mode insert ML_TEST_RESULTS
.out "../runs/ML_TEST_RESULTS%s.sql" 
select * from ML_TEST_RESULTS;
"""


  output_SQLITE_EXPORT_RESULTS_FILE = file(EXPORT_RESULTS_FILE_NAME_FULL)
  output_SQLITE_EXPORT_RESULTS_FILE_BASH_COMMAND = file(EXPORT_RESULTS_BASH_FILE_NAME_FULL)

  CMD_Exec_sqlite3_exportResults = "sqlite3 ${DATABASE_NAME} < ${EXPORT_RESULTS_FILE_NAME}"  
}




String getNowAsFormatted() {
    String STR_DATE_FORMAT = "_yyyy-MM-dd";
    java.util.Calendar c = java.util.Calendar.getInstance();
    java.util.Date d = c.getTime();
    
    java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat(STR_DATE_FORMAT);
    return sdf.format(d);

}



def generateExportResultsScripts()
{

  String script = String.format(CMD_ExportResultsSQLScript,getNowAsFormatted(),getNowAsFormatted())
  output_SQLITE_EXPORT_RESULTS_FILE.write script
  output_SQLITE_EXPORT_RESULTS_FILE_BASH_COMMAND.write CMD_Exec_sqlite3_exportResults


  ant.chmod(dir:FOLDER_DATASETS_FULLPATH, perm:'+x', includes:"*.bash")

}


task backupResultTablesToSqlFile(type:Exec) << {
  generateExportResultsScripts();

  workingDir FOLDER_DATASETS_FULLPATH

  standardOutput = new ByteArrayOutputStream()

  ext.output = {
    return standardOutput.toString()
  }

  if (isWindows())
  {
    commandLine 'cmd', '/c', CMD_Exec_sqlite3_exportResults
  }
  else
  {
    commandLine "./" + EXPORT_RESULTS_BASH_FILE_NAME
  }

 }


backupResultTablesToSqlFile.group = GROUP_NAME_BACKUP
backupResultTablesToSqlFile.description = """ This task take a backup of following Results Tables:
                                ML_TRAIN_RESULTS
                                ML_TEST_RESULTS"""





task backupFull << {

}
backupFull.group = GROUP_NAME_BACKUP

backupFull.dependsOn   'backupResultTablesToSqlFile'

